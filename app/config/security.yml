#
#jms_security_extra:
#    secure_all_services: false
#    expressions: true
#
#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

#    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
security:
    firewalls:
        connexion_firewall:
            pattern:    ^/GSBR/connexion$
            anonymous:  ~
        secured_area:
            pattern:    ^/GSBR/
            form_login:
                login_path:  /GSBR/connexion
                check_path:  /GSBR/connexion_check
            logout:
                path:   /GSBR/deconnexion
                target: /GSBR/

    access_control:
        - { path: ^/GSBR/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/GSBR/, roles: ROLE_ADMIN }
    providers:
        main:
            entity: { class: CR\GSBRBundle\Entity\Visiteur, property: login }


    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        CR\GSBRBundle\Entity\Visiteur: plaintext